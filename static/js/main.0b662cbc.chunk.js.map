{"version":3,"sources":["panels/Home.js","panels/Persik.js","App.js","index.js","img/persik.png"],"names":["Home","_ref","id","go","fetchedUser","react_default","a","createElement","vkui","title","before","photo_200","src","description","city","concat","first_name","last_name","size","level","onClick","data-to","osname","platform","Persik","props","left","IOS","chevron_back_default","back_default","className","persik","alt","App","_this","Object","classCallCheck","this","possibleConstructorReturn","getPrototypeOf","call","parseQueryString","string","slice","split","map","queryParam","kvp","key","value","reduce","query","e","setState","activePanel","currentTarget","dataset","to","state","_this2","connect","subscribe","detail","type","data","console","log","send","queryParams","window","location","search","hashParams","hash","keys","style","color","panels_Home","src_panels_Persik","React","Component","ReactDOM","render","src_App","document","getElementById","module","exports","__webpack_require__","p"],"mappings":"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","file":"static/js/main.0b662cbc.chunk.js","sourcesContent":["import React from 'react';\nimport PropTypes from 'prop-types';\nimport { Panel, ListItem, Button, Group, Div, Avatar, PanelHeader } from '@vkontakte/vkui';\n\n\n\nconst Home = ({ id, go, fetchedUser }) => (\n\t<Panel id={id}>\n\t\t<PanelHeader>Example</PanelHeader>\n\t\t{fetchedUser &&\n\t\t<Group title=\"User Data Fetched with VK Connect\">\n\t\t\t<ListItem\n\t\t\t\tbefore={fetchedUser.photo_200 ? <Avatar src={fetchedUser.photo_200}/> : null}\n\t\t\t\tdescription={fetchedUser.city && fetchedUser.city.title ? fetchedUser.city.title : ''}\n\t\t\t>\n\t\t\t\t{`${fetchedUser.first_name} ${fetchedUser.last_name}`}\n\t\t\t</ListItem>\n\t\t</Group>}\n\n\t\t<Group title=\"Navigation Example\">\n\t\t\t<Div>\n\t\t\t\t<Button size=\"xl\" level=\"2\" onClick={go} data-to=\"main\">\n\t\t\t\t\tShow me params\n\t\t\t\t</Button>\n\t\t\t</Div>\n\t\t</Group>\n\t</Panel>\n);\n\nHome.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n\tfetchedUser: PropTypes.shape({\n\t\tphoto_200: PropTypes.string,\n\t\tfirst_name: PropTypes.string,\n\t\tlast_name: PropTypes.string,\n\t\tcity: PropTypes.shape({\n\t\t\ttitle: PropTypes.string,\n\t\t}),\n\t}),\n};\n\nexport default Home;\n","import React from 'react';\nimport PropTypes from 'prop-types';\nimport {Panel, PanelHeader, HeaderButton, platform, IOS} from '@vkontakte/vkui';\nimport persik from '../img/persik.png';\nimport './Persik.css';\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\n\nconst osname = platform();\n\nconst Persik = props => (\n\t<Panel id={props.id}>\n\t\t<PanelHeader\n\t\t\tleft={<HeaderButton onClick={props.go} data-to=\"home\">\n\t\t\t\t{osname === IOS ? <Icon28ChevronBack/> : <Icon24Back/>}\n\t\t\t</HeaderButton>}\n\t\t>\n\t\t\tPersik\n\t\t</PanelHeader>\n\t\t<img className=\"Persik\" src={persik} alt=\"Persik The Cat\"/>\n\t</Panel>\n);\n\nPersik.propTypes = {\n\tid: PropTypes.string.isRequired,\n\tgo: PropTypes.func.isRequired,\n};\n\nexport default Persik;\n","import React from 'react';\nimport connect from '@vkontakte/vkui-connect';\nimport {Cell, Group, List, Panel, PanelHeader, View, HeaderButton, platform, IOS} from '@vkontakte/vkui';\nimport '@vkontakte/vkui/dist/vkui.css';\nimport Icon28ChevronBack from '@vkontakte/icons/dist/28/chevron_back';\nimport Icon24Back from '@vkontakte/icons/dist/24/back';\n\nimport Home from './panels/Home';\nimport Persik from './panels/Persik';\n\nclass App extends React.Component {\n\tconstructor(props) {\n\t\tsuper(props);\n\n\t\tthis.state = {\n\t\t\tactivePanel: 'home',\n\t\t\tfetchedUser: null,\n\t\t};\n\t}\n\n\tparseQueryString = (string) => {\n\t\t return string.slice(1).split('&')\n\t\t\t  .map((queryParam) => {\n\t\t\t\t   let kvp = queryParam.split('=');\n\t\t\t\t   return {key: kvp[0], value: kvp[1]}\n\t\t\t  })\n\t\t\t  .reduce((query, kvp) => {\n\t\t\t\t   query[kvp.key] = kvp.value;\n\t\t\t\t   return query\n\t\t\t  }, {})\n\t  };\n\n\tcomponentDidMount() {\n\t\tconnect.subscribe((e) => {\n\t\t\tswitch (e.detail.type) {\n\t\t\t\tcase 'VKWebAppGetUserInfoResult':\n\t\t\t\t\tthis.setState({ fetchedUser: e.detail.data });\n\t\t\t\t\tbreak;\n\t\t\t\tdefault:\n\t\t\t\t\tconsole.log(e.detail.type);\n\t\t\t}\n\t\t});\n\t\tconnect.send('VKWebAppGetUserInfo', {});\n\t}\n\n\tgo = (e) => {\n\t\tthis.setState({ activePanel: e.currentTarget.dataset.to })\n\t};\n\n\trender() {\n\t\tconst osname = platform();\n\t\tconst queryParams = this.parseQueryString(window.location.search);\n\t\tconst hashParams = this.parseQueryString(window.location.hash);\n\t\t\n\t\treturn (\n\t\t\t<View activePanel={this.state.activePanel}>\n\t\t\t\t<Panel id=\"main\">\n\t\t\t\t\t<PanelHeader\n\t\t\t\t\t\tleft={<HeaderButton onClick={this.go} data-to=\"home\">\n\t\t\t\t\t\t\t{osname === IOS ? <Icon28ChevronBack/> : <Icon24Back/>}\n\t\t\t\t\t\t</HeaderButton>}\n\t\t\t\t\t>\n\t\t\t\t\t\tLaunch params\n\t\t\t\t\t</PanelHeader>\n\t\t\t\t\t<Group title=\"Query params\">\n\t\t\t\t\t\t<List>\n\t\t\t\t\t\t\t{Object.keys(queryParams).map((key) => {\n\t\t\t\t\t\t\t\tlet value = queryParams[key];\n\t\t\t\t\t\t\t\treturn <Cell description={key}>{value ? value : <span style={{color: 'red'}}>-</span>}</Cell>;\n\t\t\t\t\t\t\t})}\n\t\t\t\t\t\t</List>\n\t\t\t\t\t</Group>\n\t\t\t\t\t<Group title=\"Hash params\">\n\t\t\t\t\t\t<List>\n\t\t\t\t\t\t\t {Object.keys(hashParams).map((key) => {\n\t\t\t\t\t\t\t\t  let value = hashParams[key];\n\t\t\t\t\t\t\t\t  return <Cell description={key}>{value ? value : <span style={{color: 'red'}}>-</span>}</Cell>;\n\t\t\t\t\t\t\t })}\n\t\t\t\t\t\t</List>\n\t\t\t\t\t</Group>\n\t\t\t\t</Panel>\n\t\t\t\t<Home id=\"home\" fetchedUser={this.state.fetchedUser} go={this.go} />\n\t\t\t\t<Persik id=\"persik\" go={this.go} />\n\t\t\t</View>\n\t\t);\n\t}\n}\n\nexport default App;\n","import 'core-js/es6/map';\nimport 'core-js/es6/set';\nimport React from 'react';\nimport ReactDOM from 'react-dom';\nimport connect from '@vkontakte/vkui-connect';\nimport App from './App';\n// import registerServiceWorker from './sw';\n\n// Init VK App\nconnect.send('VKWebAppInit', {});\n\n// Если вы хотите, чтобы ваше веб-приложение работало в оффлайне и загружалось быстрее,\n// расскомментируйте строку с registerServiceWorker();\n// Но не забывайте, что на данный момент у технологии есть достаточно подводных камней\n// Подробнее про сервис воркеры можно почитать тут — https://vk.cc/8MHpmT \n// registerServiceWorker();\n\nReactDOM.render(<App />, document.getElementById('root'));\n","module.exports = __webpack_public_path__ + \"static/media/persik.4e1ec840.png\";"],"sourceRoot":""}